const fs = require('fs');
const path = require('path');

const mergeJSON = (a, b) => {
  Object.keys(b).forEach(k => {
    if (a[k]) {
      if (Array.isArray(a[k])) {
        if (!Array.isArray(b[k])) {
          throw new Error(`${k} in two object has different type`);
        }
        a[k] = [...a[k], ...b[k]];
        return;
      } else if (typeof a[k] === 'object') {
        if (typeof b[k] !== 'object') {
          throw new Error(`${k} in two object has different type`);
        }
        a[k] = mergeJSON(a[k], b[k]);
        return;
      }
    }
    a[k] = b[k];
  });
  return a;
};

class EslintHandler {
  constructor(appDir, results, projectOps) {
    this.baseDir = appDir;
    this.results = results;
  }
  renderTemplate() {
    fs.copyFileSync(path.join(__dirname, './template/.eslintrc.js'), path.join(this.baseDir, '.eslintrc.js'));
    fs.copyFileSync(
      path.join(__dirname, './template/prettier.config.js'),
      path.join(this.baseDir, 'prettier.config.js')
    );
  }
  configurePackage(pkg) {
    const _pkg = {
      devDependencies: {
        '@typescript-eslint/eslint-plugin': '2.16.0',
        '@typescript-eslint/parser': '2.16.0',
        'babel-eslint': '10.0.2',
        eslint: '6.1.0',
        'eslint-config-airbnb-typescript': '6.3.1',
        'eslint-config-prettier': '6.0.0',
        'eslint-config-react-app': '5.0.1',
        'eslint-loader': '2.1.2',
        'eslint-plugin-cypress': '2.11.1',
        'eslint-plugin-flowtype': '4.2.0',
        'eslint-plugin-import': '2.18.2',
        'eslint-plugin-jest': '23.6.0',
        'eslint-plugin-jsx-a11y': '6.2.3',
        'eslint-plugin-prettier': '^3.1.4',
        'eslint-plugin-react': '7.14.3',
        'eslint-plugin-react-hooks': '1.7.0',
        prettier: '2.0.5'
      },
      scripts: {
        lint: 'eslint ./src/ --ext .js,.jsx,.ts,.tsx --ignore-path .gitignore '
      }
    };
    return mergeJSON(pkg, _pkg);
  }
  configureCompileInfo(config) {}
}

module.exports = EslintHandler;
